* Grimoire World - Medieval MMORPG with player driven economy.

#+BEGIN_QUOTE 
 If you don't believe it or don't get it, I don't have the time to try to convince you, sorry. â€” Satoshi Nakamoto
#+END_QUOTE
#+BEGIN_SRC
                .-~~~~~~~~~-._       _.-~~~~~~~~~-.
            __.'              ~.   .~              `.__
          .'//                  \./                  \\`.
        .'//                     |                     \\`.
      .'// .-~"""""""~~~~-._     |     _,-~~~~"""""""~-. \\`.
    .'//.-"                 `-.  |  .-'                 "-.\\`.
  .'//______.============-..   \ | /   ..-============.______\\`.
.'______________________________\|/______________________________`.
#+END_SRC

** What is it?

Grimoire demonstrates the *power of CSS* in the browser, a game engine built with pure CSS transformations, React and Clojurescript.

Grimoire demonstrates the *sandbox economy* with real player driven prices powered by Ethereum smart contracts.

Grimoire demonstrates the *holy grail* workflow for online game development: an auto-restartable back-end + a hot-reloadable front-end powered by Clojure + Boot + System.

** Why is it great?

Made with *public domain* renaissance paintings.

*Decentralized* ruleset, real players govern the world, their magic effects the environment, their willpower break walls.

*Freedom of PKing* with high-traffic PVP areas and a virtuous combat system.

** Start playing:
[[http://grimoire.world]]

** Join the creators on Ubuntu:
Clone this repo, cd into it and start the development build.
#+BEGIN_SRC shell
$ git clone git@github.com:aaronpowered/grimoire.git
$ cd grimoire
$ ./init.sh 
$ ./dev.sh
#+END_SRC
Init installs lolcat. It is very important!

Your world is created and available at [[http://localhost:3000]].

Open your spellbook in an other terminal:
#+BEGIN_SRC shell
$ ./repl.sh
#+END_SRC

The ~auto~ option in the ~system~ boot task takes care of your application lifecycle. Your system will automatically be reset after editing ~handler.clj~. Changes elsewhere that do not require a system restart will be reloaded on the fly everytime you save your work. 

This workflow is built on top of [[http://boot-clj.com/][Boot]], a build tool, and [[https://github.com/danielsz/system/tree/master/examples/boot][system]], a component library. 

** Are you ready for the new dawn?

